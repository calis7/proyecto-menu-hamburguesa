:root {
    --main-background-color: #2880ec;
    --text-color: white;
    --link-color: rgb(0, 187, 255);
    --link-hover-color: #555;
    --navbar-color:  #333;
}


body {
    font-family: Arial, sans-serif;
    margin: 0;
    background-color: var(--main-background-color);
    color: var(--text-color);
}


/* display: grid;: Esto establece que el elemento con la clase .navbar se comportará como un contenedor de cuadrícula. En otras palabras, los elementos secundarios de .navbar se pueden organizar en una cuadrícula. La cuadrícula es una disposición bidimensional que facilita la colocación de elementos tanto en filas como en columnas.

grid-template-columns: auto 1fr auto;: Esto define las columnas de la cuadrícula. Aquí hay tres columnas en la cuadrícula:

La primera columna tiene auto como ancho, lo que significa que se ajustará automáticamente para adaptarse al contenido dentro de ella.
La segunda columna tiene 1fr como ancho. El fr significa "fracción". En este caso, ocupa una fracción igual del espacio disponible. Entonces, si hay espacio adicional, esta columna se expandirá para llenarlo. La columna del medio suele usarse para ocupar el espacio restante y centrar el contenido.
La tercera columna es similar a la primera: auto ajustará su ancho automáticamente según el contenido.
padding: 20px;: Esto agrega un relleno de 20 píxeles alrededor del contenido del .navbar. El relleno es el espacio entre el contenido y el borde del elemento.

background-color: var(--navbar-color);: Establece el color de fondo del .navbar. En este caso, utiliza una variable CSS llamada --navbar-color que se define en el bloque :root de tus estilos (fuera del fragmento proporcionado). El uso de variables CSS permite una fácil personalización de colores en todo el sitio web.

color: var(--text-color);: Establece el color del texto dentro del .navbar. Al igual que el color de fondo, utiliza una variable CSS llamada --text-color, que se define en el bloque :root.

align-items: center;: Esto alinea verticalmente los elementos dentro del .navbar para que estén centrados verticalmente. En otras palabras, los elementos se alinearán en el medio vertical del contenedor .navbar.

En resumen, este bloque de estilos configura el contenedor .navbar para que funcione como una cuadrícula con tres columnas y aplique estilos de fondo, color de texto y alineación vertical personalizados utilizando variables CSS para colores. La cuadrícula se utiliza comúnmente en el diseño web para crear diseños flexibles y responsivos. */

.navbar {
    display: grid;
    grid-template-columns: auto 1fr auto;
    padding: 20px;
    background-color:var(--navbar-color);
    color: var(--text-color);
    align-items: center;
}
.logo {
    width: 10%; /* Puedes ajustar el porcentaje según tus necesidades */
    max-width: 100px; /* Establece un ancho máximo para evitar que el logotipo sea demasiado grande */
    height: auto; /* Mantiene la proporción original del logotipo */
}
ul {
    list-style: none;
}


.nav-links {
    display: grid;  /* Esta propiedad CSS establece que el elemento con la clase .nav-links debe utilizar un sistema de diseño basado en cuadrícula. Al hacerlo, los elementos secundarios dentro de .nav-links se pueden organizar en una cuadrícula. */
    
    grid-template-columns: repeat(4, auto);/* Esta propiedad define cómo se deben distribuir las columnas en la cuadrícula. En este caso, se está creando una cuadrícula con cuatro columnas de ancho automático (auto). Esto significa que cada columna se ajustará automáticamente a su contenido, lo que garantiza que las columnas tengan el ancho adecuado según su contenido. */

    gap: 20px; /* Esta propiedad establece un espacio (margen) de 20 píxeles entre las filas y las columnas de la cuadrícula. En otras palabras, habrá un espacio de 20 píxeles entre los elementos en .nav-links, lo que ayuda a crear un diseño más espaciado y legible. */


    justify-content: center;
}

.nav-links a {
    color: white;
    text-decoration: none;
    transition: text-decoration 0.3s ease;
}
.nav-links a:focus {
    background-color: #555;
    color: #fff;
}
.nav-links a:hover {
    color: rgb(0, 187, 255); /* Cambia el color del texto a azul */
    text-decoration: underline; /* Subraya el texto */
}


.hamburger {
    display: none;
    cursor: pointer;
    flex-direction: column;
    margin-left: 1rem
}

.bar {
    width: 30px;
    height: 3px;
    background-color: white;
    margin: 3px 0;
    transition: 0.4s;
}

.content {
    padding: 20px;
}

@media (max-width: 768px) {   /* Esto define una media query que se aplicará cuando el ancho de la ventana sea igual o menor a 768 píxeles. Es decir, estos estilos se activarán en dispositivos con pantallas más pequeñas, como teléfonos móviles. */

    .nav-links { /* Aquí se establecen estilos para el elemento con la clase .nav-links cuando se cumple la condición de la media query. */
        
       /** Se pueden utilizar ambas formas de grilla tanto flex como grid***/

        display: none; /* Esto oculta inicialmente la barra de navegación en pantallas pequeñas al establecer su propiedad display en "none". */


       /*  grid-template-columns: 1fr; */ /* Esto define una sola columna en la cuadrícula de la barra de navegación con un ancho igual al 100% del contenedor. Esto hace que los elementos se apilen verticalmente. */


        flex-direction: column; /**Elementos apilados verticalmente**/
        gap: 10px;
        text-align: center;
        position: absolute;

        top: 60px; /* 60px; left: 0;: Establece la barra de navegación en la parte superior de la pantalla (top: 60px) y alineada a la izquierda (left: 0) de forma absoluta. */

        left: 0;
        background-color: #333;
        width: 100%;
        padding: 20px 0; /* Agrega un relleno (padding) de 20 píxeles en la parte superior e inferior de la barra de navegación. */
    }

    .nav-links.active { /* Cuando se agrega la clase "active" a .nav-links, se sobrescriben los estilos anteriores y se muestra la barra de navegación. */
        /* display: grid; */
        display: flex;
    }

    .hamburger {
        display: flex;
    }
}
